######################################################
## This Dockfile was originally generated by:
## Neurodocker version 0.7.0
## (https://github.com/ReproNim/neurodocker)
## on 2021/01/21 15:32:09 UTC.
######################################################
## Since then, it had been manually modified by
## Haoming Huang (fsplscallmejo@live.com) for
## The Neuroimaging Lab, Department of Radiology,
## The First Affiliated Hospital of
## Guangzhou University of Chinese Medicine.
######################################################
## It had been tuned so that the final docker image
## can be built inside the special network environment
## of CN.
## The # CN_SP tags are used for controlling
## the networking during the build procedures
## (No longer)
## through ss-libev proxy by proxychains-ng.
## (No longer)
## Ubuntu and github mirrors are subsitituded with
## mirrors.ustc.edu.cn or
## https://github.com.cnpmjs.org
######################################################

FROM radiolab_base:latest

USER root

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8"

####################
#### Basic Conf ####
####################
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
            apt-utils \
            bzip2 \
            ca-certificates \
            curl \
            locales \
            unzip \
            gnupg \
            bc \
            dc \
            software-properties-common \
            htop \
            tmux \
            xvfb \
            xterm \
            vim \
            curl \
            gedit \
            evince \
            firefox \
            man \
            htop \
            bmon \
            parallel \
            pexec \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt

RUN mkdir -p /radiolabdocker \
    && chmod -R 777 /radiolabdocker && chmod a+s /radiolabdocker \
    && export RD_ENTRYPOINT="/radiolabdocker/startup.sh" \
    && if [ ! -f "$RD_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$RD_ENTRYPOINT" \
    &&   echo 'set -e' >> "$RD_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$RD_ENTRYPOINT"; \
    fi \
    && chmod 755 /radiolabdocker/startup.sh \
    && echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> $RD_ENTRYPOINT

ENV RD_ENTRYPOINT="/radiolabdocker/startup.sh"
ENTRYPOINT ["/radiolabdocker/startup.sh"]

####################
####    AFNI    ####
####################
ENV PATH="/opt/afni:$PATH" \
    AFNI_PLUGINPATH="/opt/afni"\
    QT_X11_NO_MITSHM=1
RUN echo "deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/" >> /etc/apt/sources.list \
    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \
    && add-apt-repository -y ppa:ubuntugis/ppa \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
            tcsh \
            x11-utils \
            xfonts-base \
            xfonts-100dpi \
            libssl-dev \
            python-is-python3 \
            python3-matplotlib \
            gsl-bin \
            libgsl0-dev \
            netpbm \
            libjpeg62 \
            eog \
            mesa-utils \
            libgl1-mesa-glx \
            libglu1-mesa-dev \
            libglw1-mesa \
            libxm4 \
            build-essential \
            libcurl4-openssl-dev \
            libxml2-dev  \
            libgfortran-8-dev \
            libgomp1 \
            nautilus \
            xfonts-base \
            r-base \
            r-base-dev \
            libgtk2.0-0 \
            libv8-dev \
            libudunits2-dev \
            openmpi-bin \
            libopenmpi-dev \
            gdal-bin \
            libgdal-dev \
            proj-data \
            proj-bin \
            libproj-dev \
            libgeos-dev \
    && apt-get install -f \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && ln -s /usr/lib/x86_64-linux-gnu/libgsl.so.23 /usr/lib/x86_64-linux-gnu/libgsl.so.19 \
    && ldconfig

####################
####    ANTs    ####
####################
ENV ANTSPATH="/opt/ants/bin" \
    PATH="/opt/ants/bin:/opt/ants/Scripts:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
            git \
            gettext \
            libtool \
            libtool-bin \
            autoconf \
            automake \
            cmake \
            g++ \
            pkg-config \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

####################
####     FSL    ####
####################
ENV FSLDIR="/opt/fsl" \
    PATH="/opt/fsl/bin:$PATH" \
    FSLOUTPUTTYPE="NIFTI_GZ" \
    FSLMULTIFILEQUIT="TRUE" \
    FSLTCLSH="/opt/fsl/bin/fsltclsh" \
    FSLWISH="/opt/fsl/bin/fslwish" \
    FSLLOCKDIR="" \
    FSLMACHINELIST="" \
    FSLREMOTECALL="" \
    FSLGECUDAQ="cuda.q"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           libncurses5 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

####################
#### Freesurfer ####
####################
ENV OS="Linux" \
    FS_OVERRIDE=0 \
    FIX_VERTEX_AREA="" \
    FSF_OUTPUT_FORMAT="nii.gz" \
    FREESURFER_HOME="/opt/freesurfer" \
    LD_LIBRARY_PATH="/opt/freesurfer/lib/qt/lib:$LD_LIBRARY_PATH" \
    PATH="/opt/freesurfer/bin:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           libxmu6 \
           libxt6 \
           perl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

####################
####  dcm2niix  ####
####################
ENV PATH="/opt/dcm2niix:$PATH"

####################
#### miniconda  ####
####################
ENV CONDA_DIR="/opt/miniconda-latest" \
    PATH="/opt/miniconda-latest/bin:$PATH"