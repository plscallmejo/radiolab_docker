# Generated by: Neurodocker version 0.7.0+0.gdc97516.dirty
# Latest release: Neurodocker version 0.7.0
# Timestamp: 2021/01/31 03:49:50 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/ReproNim/neurodocker

Bootstrap: docker
From: ubuntu:focal

%setup
    cp content/fsl-6.0.4-centos7_64.tar.gz /tmp
    cp content/freesurfer-linux-centos8_x86_64-7.1.1.tar.gz /tmp
    cp content/license.txt /tmp
    cp content/ants-Linux-centos6_x86_64-v2.3.4.tar.gz /tmp
    cp content/linux_openmp_64.tgz /tmp
    cp content/shadowsocks.json /tmp
    cp content/proxychains.conf /tmp

%post
su - root

export ND_ENTRYPOINT="/neurodocker/startup.sh"
sed -i "s/archive.ubuntu.com/mirrors.aliyun.com/g" /etc/apt/sources.list
apt-get update -qq
apt-get install -y -q --no-install-recommends \
    apt-utils \
    bzip2 \
    ca-certificates \
    curl \
    locales \
    unzip
apt-get install -y -q --no-install-recommends \
    shadowsocks-libev \
    simple-obfs \
    proxychains4 
apt-get clean
rm -rf /var/lib/apt/lists/*
sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
dpkg-reconfigure --frontend=noninteractive locales
update-locale LANG="en_US.UTF-8"
chmod 777 /opt && chmod a+s /opt
mkdir -p /neurodocker
if [ ! -f "$ND_ENTRYPOINT" ]; then
  echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT"
  echo 'set -e' >> "$ND_ENTRYPOINT"
  echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT"
  echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT";
fi
cp /tmp/shadowsocks.json /etc/shadowsocks.json
cp /tmp/proxychains.conf /etc/proxychains.conf
chmod -R 777 /neurodocker && chmod a+s /neurodocker

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    dc \
    file \
    libfontconfig1 \
    libfreetype6 \
    libgl1-mesa-dev \
    libgl1-mesa-dri \
    libglu1-mesa-dev \
    libgomp1 \
    libice6 \
    libxcursor1 \
    libxft2 \
    libxinerama1 \
    libxrandr2 \
    libxrender1 \
    libxt6 \
    sudo \
    wget
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FSL ..."
mkdir -p /opt/fsl-6.0.4
# curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.4-centos6_64.tar.gz \
# | tar -xz -C /opt/fsl-6.0.4 --strip-components 1 
tar -xzvf /tmp/fsl-6.0.4-centos7_64.tar.gz -C /opt/fsl-6.0.4 --strip-components 1 
sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT
sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT
sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT
sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT
echo "Installing FSL conda environment ..."
ss-local -c /etc/shadowsocks.json > /dev/null 2>&1 &
proxychains bash /opt/fsl-6.0.4/etc/fslconf/fslpython_install.sh -f /opt/fsl-6.0.4

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    bc \
    libgomp1 \
    libxmu6 \
    libxt6 \
    perl \
    tcsh
apt-get clean
rm -rf /var/lib/apt/lists/*
echo "Downloading FreeSurfer ..."
mkdir -p /opt/freesurfer-7.1.1
# curl -fsSL --retry 5 ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/7.1.1/freesurfer-Linux-centos6_x86_64-stable-pub-v7.1.1.tar.gz \
# | tar -xz -C /opt/freesurfer-7.1.1 --strip-components 1 \
tar -zxvf /tmp/freesurfer-linux-centos8_x86_64-7.1.1.tar.gz --no-same-owner -C /opt/freesurfer-7.1.1 --strip-components 1 
sed -i '$isource "/opt/freesurfer-7.1.1/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

echo "Downloading ANTs ..."
mkdir -p /opt/ants-2.3.4
# curl -fsSL --retry 5 https://dl.dropbox.com/s/1xfhydsf4t4qoxg/ants-Linux-centos6_x86_64-v2.3.4.tar.gz \
# | tar -xz -C /opt/ants-2.3.4 --strip-components 1
tar -zxvf /tmp/ants-Linux-centos6_x86_64-v2.3.4.tar.gz -C /opt/ants-2.3.4 --strip-components 1 

apt-get update -qq
apt-get install -y -q --no-install-recommends \
    ed \
    gsl-bin \
    libglib2.0-0 \
    libglu1-mesa-dev \
    libglw1-mesa \
    libgomp1 \
    libjpeg62 \
    libnlopt-dev \
    libxm4 \
    netpbm \
    python3 \
    r-base \
    r-base-dev \
    tcsh \
    xfonts-base \
    xvfb
apt-get clean
rm -rf /var/lib/apt/lists/*
curl -sSL --retry 5 -o /tmp/toinstall.deb http://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
curl -sSL --retry 5 -o /tmp/toinstall.deb http://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb
dpkg -i /tmp/toinstall.deb
rm /tmp/toinstall.deb
apt-get install -f
apt-get clean
rm -rf /var/lib/apt/lists/*
gsl2_path="$(find / -name 'libgsl.so.19' || printf '')"
if [ -n "$gsl2_path" ]; then
  ln -sfv "$gsl2_path" "$(dirname $gsl2_path)/libgsl.so.0";
fi
ldconfig
echo "Downloading AFNI ..."
mkdir -p /opt/afni-latest
# curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \
# | tar -xz /tmp/linux_openmp_64.tgz -C /opt/afni-latest --strip-components 1
tar -xz /tmp/linux_openmp_64.tgz -C /opt/afni-latest --strip-components 1
PATH=$PATH:/opt/afni-latest rPkgsInstall -pkgs ALL


echo '{
\n  "pkg_manager": "apt",
\n  "instructions": [
\n    [
\n      "base",
\n      "debian:stretch"
\n    ],
\n    [
\n      "user",
\n      "root"
\n    ],
\n    [
\n      "_header",
\n      {
\n        "version": "generic",
\n        "method": "custom"
\n      }
\n    ],
\n    [
\n      "fsl",
\n      {
\n        "version": "6.0.3"
\n      }
\n    ],
\n    [
\n      "freesurfer",
\n      {
\n        "version": "6.0.1"
\n      }
\n    ],
\n    [
\n      "ants",
\n      {
\n        "version": "2.3.1"
\n      }
\n    ],
\n    [
\n      "afni",
\n      {
\n        "version": "latest",
\n        "install_r": "true",
\n        "install_r_pkgs": "true",
\n        "install_python3": "true"
\n      }
\n    ]
\n  ]
\n}' > /neurodocker/neurodocker_specs.json

%environment
export LANG="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export ND_ENTRYPOINT="/neurodocker/startup.sh"
export FSLDIR="/opt/fsl-6.0.3"
export PATH="/opt/fsl-6.0.3/bin:$PATH"
export FSLOUTPUTTYPE="NIFTI_GZ"
export FSLMULTIFILEQUIT="TRUE"
export FSLTCLSH="/opt/fsl-6.0.3/bin/fsltclsh"
export FSLWISH="/opt/fsl-6.0.3/bin/fslwish"
export FSLLOCKDIR=""
export FSLMACHINELIST=""
export FSLREMOTECALL=""
export FSLGECUDAQ="cuda.q"
export FREESURFER_HOME="/opt/freesurfer-6.0.1"
export PATH="/opt/freesurfer-6.0.1/bin:$PATH"
export ANTSPATH="/opt/ants-2.3.1"
export PATH="/opt/ants-2.3.1:$PATH"
export PATH="/opt/afni-latest:$PATH"
export AFNI_PLUGINPATH="/opt/afni-latest"

%runscript
/neurodocker/startup.sh "$@"
